import { __read, __spread } from "tslib";
// The example-module file will be auto-generated. As soon as the
// examples are being compiled, the module file will be generated.
import { EXAMPLE_COMPONENTS } from './example-module';
/**
 * Example data with information about component name, selector, files used in
 * example, and path to examples.
 */
var ExampleData = /** @class */ (function () {
    function ExampleData(example) {
        var _a;
        if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {
            return;
        }
        var _b = EXAMPLE_COMPONENTS[example], componentName = _b.componentName, additionalFiles = _b.additionalFiles, additionalComponents = _b.additionalComponents, title = _b.title;
        var exampleName = example.replace(/(?:^\w|\b\w)/g, function (letter) { return letter.toUpperCase(); });
        // TODO(tinayuangao): Do not hard-code extensions
        this.exampleFiles = ['html', 'ts', 'css'].map(function (extension) { return example + "-example." + extension; });
        this.selectorName = this.indexFilename = example + "-example";
        (_a = this.exampleFiles).push.apply(_a, __spread(additionalFiles));
        this.description = title || exampleName.replace(/[\-]+/g, ' ') + ' Example';
        this.componentNames = __spread([componentName], additionalComponents);
    }
    return ExampleData;
}());
export { ExampleData };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1kYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2FqZi1leGFtcGxlcy9leGFtcGxlLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlFQUFpRTtBQUNqRSxrRUFBa0U7QUFDbEUsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFcEQ7OztHQUdHO0FBQ0g7SUFnQkUscUJBQVksT0FBZTs7UUFDekIsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMzRCxPQUFPO1NBQ1I7UUFFSyxJQUFBLGdDQUN5QixFQUR4QixnQ0FBYSxFQUFFLG9DQUFlLEVBQUUsOENBQW9CLEVBQUUsZ0JBQzlCLENBQUM7UUFDaEMsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLENBQUMsV0FBVyxFQUFFLEVBQXBCLENBQW9CLENBQUMsQ0FBQztRQUVyRixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsU0FBUyxJQUFJLE9BQUcsT0FBTyxpQkFBWSxTQUFXLEVBQWpDLENBQWlDLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQU0sT0FBTyxhQUFVLENBQUM7UUFFOUQsQ0FBQSxLQUFBLElBQUksQ0FBQyxZQUFZLENBQUEsQ0FBQyxJQUFJLG9CQUFJLGVBQWUsR0FBRTtRQUMzQyxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssSUFBSSxXQUFXLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsR0FBRyxVQUFVLENBQUM7UUFDNUUsSUFBSSxDQUFDLGNBQWMsYUFBSSxhQUFhLEdBQUssb0JBQW9CLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBQ0gsa0JBQUM7QUFBRCxDQUFDLEFBakNELElBaUNDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIGV4YW1wbGUtbW9kdWxlIGZpbGUgd2lsbCBiZSBhdXRvLWdlbmVyYXRlZC4gQXMgc29vbiBhcyB0aGVcbi8vIGV4YW1wbGVzIGFyZSBiZWluZyBjb21waWxlZCwgdGhlIG1vZHVsZSBmaWxlIHdpbGwgYmUgZ2VuZXJhdGVkLlxuaW1wb3J0IHtFWEFNUExFX0NPTVBPTkVOVFN9IGZyb20gJy4vZXhhbXBsZS1tb2R1bGUnO1xuXG4vKipcbiAqIEV4YW1wbGUgZGF0YSB3aXRoIGluZm9ybWF0aW9uIGFib3V0IGNvbXBvbmVudCBuYW1lLCBzZWxlY3RvciwgZmlsZXMgdXNlZCBpblxuICogZXhhbXBsZSwgYW5kIHBhdGggdG8gZXhhbXBsZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBFeGFtcGxlRGF0YSB7XG4gIC8qKiBEZXNjcmlwdGlvbiBvZiB0aGUgZXhhbXBsZS4gKi9cbiAgZGVzY3JpcHRpb246IHN0cmluZztcblxuICAvKiogTGlzdCBvZiBmaWxlcyB0aGF0IGFyZSBwYXJ0IG9mIHRoaXMgZXhhbXBsZS4gKi9cbiAgZXhhbXBsZUZpbGVzOiBzdHJpbmdbXTtcblxuICAvKiogU2VsZWN0b3IgbmFtZSBvZiB0aGUgZXhhbXBsZSBjb21wb25lbnQuICovXG4gIHNlbGVjdG9yTmFtZTogc3RyaW5nO1xuXG4gIC8qKiBOYW1lIG9mIHRoZSBmaWxlIHRoYXQgY29udGFpbnMgdGhlIGV4YW1wbGUgY29tcG9uZW50LiAqL1xuICBpbmRleEZpbGVuYW1lOiBzdHJpbmc7XG5cbiAgLyoqIE5hbWVzIG9mIHRoZSBjb21wb25lbnRzIGJlaW5nIHVzZWQgaW4gdGhpcyBleGFtcGxlLiAqL1xuICBjb21wb25lbnROYW1lczogc3RyaW5nW107XG5cbiAgY29uc3RydWN0b3IoZXhhbXBsZTogc3RyaW5nKSB7XG4gICAgaWYgKCFleGFtcGxlIHx8ICFFWEFNUExFX0NPTVBPTkVOVFMuaGFzT3duUHJvcGVydHkoZXhhbXBsZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7Y29tcG9uZW50TmFtZSwgYWRkaXRpb25hbEZpbGVzLCBhZGRpdGlvbmFsQ29tcG9uZW50cywgdGl0bGV9ID1cbiAgICAgICAgRVhBTVBMRV9DT01QT05FTlRTW2V4YW1wbGVdO1xuICAgIGNvbnN0IGV4YW1wbGVOYW1lID0gZXhhbXBsZS5yZXBsYWNlKC8oPzpeXFx3fFxcYlxcdykvZywgbGV0dGVyID0+IGxldHRlci50b1VwcGVyQ2FzZSgpKTtcblxuICAgIC8vIFRPRE8odGluYXl1YW5nYW8pOiBEbyBub3QgaGFyZC1jb2RlIGV4dGVuc2lvbnNcbiAgICB0aGlzLmV4YW1wbGVGaWxlcyA9IFsnaHRtbCcsICd0cycsICdjc3MnXS5tYXAoZXh0ZW5zaW9uID0+IGAke2V4YW1wbGV9LWV4YW1wbGUuJHtleHRlbnNpb259YCk7XG4gICAgdGhpcy5zZWxlY3Rvck5hbWUgPSB0aGlzLmluZGV4RmlsZW5hbWUgPSBgJHtleGFtcGxlfS1leGFtcGxlYDtcblxuICAgIHRoaXMuZXhhbXBsZUZpbGVzLnB1c2goLi4uYWRkaXRpb25hbEZpbGVzKTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gdGl0bGUgfHwgZXhhbXBsZU5hbWUucmVwbGFjZSgvW1xcLV0rL2csICcgJykgKyAnIEV4YW1wbGUnO1xuICAgIHRoaXMuY29tcG9uZW50TmFtZXMgPSBbY29tcG9uZW50TmFtZSwgLi4uYWRkaXRpb25hbENvbXBvbmVudHNdO1xuICB9XG59XG4iXX0=