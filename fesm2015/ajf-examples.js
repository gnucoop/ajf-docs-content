/**
 * @fileoverview added by tsickle
 * Generated from: bazel-out/k8-fastbuild/bin/src/ajf-examples/example-module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 ******************************************************************************
 * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.
 ******************************************************************************/
/**
 * @record
 */
function LiveExample() { }
if (false) {
    /**
     * Title of the example.
     * @type {?}
     */
    LiveExample.prototype.title;
    /**
     * Name of the example component.
     * @type {?}
     */
    LiveExample.prototype.componentName;
    /**
     * List of additional components which are part of the example.
     * @type {?}
     */
    LiveExample.prototype.additionalComponents;
    /**
     * List of additional files which are part of the example.
     * @type {?}
     */
    LiveExample.prototype.additionalFiles;
    /**
     * NgModule that declares this example.
     * @type {?}
     */
    LiveExample.prototype.module;
}
/**
 * @record
 */
function NgModuleInfo() { }
if (false) {
    /**
     * Name of the NgModule.
     * @type {?}
     */
    NgModuleInfo.prototype.name;
    /**
     * Import specifier that resolves to this module. The specifier is not scoped to
     * `\@angular/components-examples` because it's up to the consumer how the module is
     * imported. For example, in the docs app, modules are lazily imported from `fesm2015/`.
     * @type {?}
     */
    NgModuleInfo.prototype.importSpecifier;
}
/** @type {?} */
const EXAMPLE_COMPONENTS = {
    "ionic-calendar-simple": {
        "title": "Simple calendar - Ionic",
        "componentName": "IonicCalendarSimpleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CalendarExamplesModule",
            "importSpecifier": "ionic/calendar"
        }
    },
    "material-calendar-simple": {
        "title": "Simple calendar - Material",
        "componentName": "MaterialCalendarSimpleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CalendarExamplesModule",
            "importSpecifier": "material/calendar"
        }
    }
};

/**
 * @fileoverview added by tsickle
 * Generated from: src/ajf-examples/example-data.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Example data with information about component name, selector, files used in
 * example, and path to examples.
 */
class ExampleData {
    /**
     * @param {?} example
     */
    constructor(example) {
        if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {
            return;
        }
        const { componentName, additionalFiles, additionalComponents, title } = EXAMPLE_COMPONENTS[example];
        /** @type {?} */
        const exampleName = example.replace(/(?:^\w|\b\w)/g, (/**
         * @param {?} letter
         * @return {?}
         */
        letter => letter.toUpperCase()));
        // TODO(tinayuangao): Do not hard-code extensions
        this.exampleFiles = ['html', 'ts', 'css'].map((/**
         * @param {?} extension
         * @return {?}
         */
        extension => `${example}-example.${extension}`));
        this.selectorName = this.indexFilename = `${example}-example`;
        this.exampleFiles.push(...additionalFiles);
        this.description = title || exampleName.replace(/[\-]+/g, ' ') + ' Example';
        this.componentNames = [componentName, ...additionalComponents];
    }
}
if (false) {
    /**
     * Description of the example.
     * @type {?}
     */
    ExampleData.prototype.description;
    /**
     * List of files that are part of this example.
     * @type {?}
     */
    ExampleData.prototype.exampleFiles;
    /**
     * Selector name of the example component.
     * @type {?}
     */
    ExampleData.prototype.selectorName;
    /**
     * Name of the file that contains the example component.
     * @type {?}
     */
    ExampleData.prototype.indexFilename;
    /**
     * Names of the components being used in this example.
     * @type {?}
     */
    ExampleData.prototype.componentNames;
}

/**
 * @fileoverview added by tsickle
 * Generated from: src/ajf-examples/public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * Generated bundle index. Do not edit.
 */

export { EXAMPLE_COMPONENTS, ExampleData };
//# sourceMappingURL=ajf-examples.js.map
